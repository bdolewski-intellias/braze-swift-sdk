{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension"},"hierarchy":{"paths":[["doc:\/\/Braze\/documentation\/BrazeUI"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewDimension"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Large interface values are used when the UI is being displayed with both horizontal and vertical"},{"type":"text","text":" "},{"text":"size classes are ","type":"text"},{"type":"codeVoice","code":".regular"},{"type":"text","text":" and the device is in landscape."}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension\/init(regular:large:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension\/large","doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension\/regular"]},{"title":"Default Implementations","identifiers":["doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension\/Equatable-Implementations","doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension\/ExpressibleByFloatLiteral-Implementations","doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension\/ExpressibleByIntegerLiteral-Implementations"],"generated":true}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/Braze\/SQ","doc:\/\/Braze\/s25ExpressibleByFloatLiteralP","doc:\/\/Braze\/s27ExpressibleByIntegerLiteralP","doc:\/\/Braze\/SH"],"type":"conformsTo"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/brazeui\/viewdimension"]}],"abstract":[{"type":"text","text":"A struct representing view dimensions for both regular and large interfaces."}],"metadata":{"externalID":"s:7BrazeUI13ViewDimensionV","navigatorTitle":[{"text":"ViewDimension","kind":"identifier"}],"title":"ViewDimension","role":"symbol","symbolKind":"struct","modules":[{"name":"BrazeUI"}],"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ViewDimension","kind":"identifier"}]},"references":{"doc://Braze/documentation/BrazeUI/ViewDimension":{"abstract":[{"type":"text","text":"A struct representing view dimensions for both regular and large interfaces."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewDimension"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewDimension","kind":"identifier"}],"url":"\/documentation\/brazeui\/viewdimension","title":"ViewDimension"},"doc://Braze/documentation/BrazeUI":{"abstract":[{"type":"text","text":"Braze provided user interface for In-App Messages and Content Cards."}],"type":"topic","url":"\/documentation\/brazeui","title":"BrazeUI","role":"collection","kind":"symbol","identifier":"doc:\/\/Braze\/documentation\/BrazeUI"},"doc://Braze/documentation/BrazeUI/ViewDimension/Equatable-Implementations":{"title":"Equatable Implementations","role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/brazeui\/viewdimension\/equatable-implementations","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension\/Equatable-Implementations","abstract":[]},"doc://Braze/documentation/BrazeUI/ViewDimension/init(regular:large:)":{"abstract":[],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension\/init(regular:large:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"regular","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"text":"large","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":")","kind":"text"}],"url":"\/documentation\/brazeui\/viewdimension\/init(regular:large:)","title":"init(regular:large:)"},"doc://Braze/documentation/BrazeUI/ViewDimension/ExpressibleByFloatLiteral-Implementations":{"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension\/ExpressibleByFloatLiteral-Implementations","role":"collectionGroup","title":"ExpressibleByFloatLiteral Implementations","type":"topic","url":"\/documentation\/brazeui\/viewdimension\/expressiblebyfloatliteral-implementations","abstract":[],"kind":"article"},"doc://Braze/documentation/BrazeUI/ViewDimension/regular":{"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension\/regular","url":"\/documentation\/brazeui\/viewdimension\/regular","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"regular"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"}],"kind":"symbol","abstract":[{"text":"The dimension for the regular case.","type":"text"}],"type":"topic","title":"regular","role":"symbol"},"doc://Braze/documentation/BrazeUI/ViewDimension/large":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"large","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"title":"large","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension\/large","abstract":[{"type":"text","text":"The dimension for the large case."}],"role":"symbol","type":"topic","url":"\/documentation\/brazeui\/viewdimension\/large","kind":"symbol"},"doc://Braze/documentation/BrazeUI/ViewDimension/ExpressibleByIntegerLiteral-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","abstract":[],"url":"\/documentation\/brazeui\/viewdimension\/expressiblebyintegerliteral-implementations","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/ViewDimension\/ExpressibleByIntegerLiteral-Implementations","title":"ExpressibleByIntegerLiteral Implementations"},"doc://Braze/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/Braze\/SQ","type":"unresolvable"},"doc://Braze/s25ExpressibleByFloatLiteralP":{"title":"Swift.ExpressibleByFloatLiteral","identifier":"doc:\/\/Braze\/s25ExpressibleByFloatLiteralP","type":"unresolvable"},"doc://Braze/s27ExpressibleByIntegerLiteralP":{"title":"Swift.ExpressibleByIntegerLiteral","identifier":"doc:\/\/Braze\/s27ExpressibleByIntegerLiteralP","type":"unresolvable"},"doc://Braze/SH":{"identifier":"doc:\/\/Braze\/SH","title":"Swift.Hashable","type":"unresolvable"}}}