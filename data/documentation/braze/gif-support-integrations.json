{"kind":"article","hierarchy":{"paths":[["doc:\/\/Braze\/documentation\/BrazeKit"],["doc:\/\/Braze\/documentation\/BrazeUI"]]},"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/Braze\/tutorials\/Braze\/c1-inappmessageui","doc:\/\/Braze\/documentation\/Braze\/in-app-message-customization","doc:\/\/Braze\/tutorials\/Braze\/c2-contentcardsui","doc:\/\/Braze\/documentation\/Braze\/content-cards-customization","doc:\/\/Braze\/tutorials\/Braze\/c3-gif-support"],"generated":true,"title":"User Interface"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"type":"text","text":"Braze does not provide animated GIF support out of the box. Support can be added by wrapping a third-party provider or your own view in an instance of "},{"type":"reference","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This article presents sample implementations for popular third party libraries:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"#sdwebimage-recommended","isActive":true},{"text":" (recommended)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"#gifu","type":"reference"}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"#swiftygif","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"#flanimatedimage","type":"reference","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"#yyimage","isActive":true}],"type":"paragraph"}]}]},{"text":"Integration","level":3,"anchor":"Integration","type":"heading"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Choose one of the implementations below."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Install the dependency by following the instructions in the corresponding dependency repository page."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Copy and paste the sample code into a new file in your project."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Set "},{"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct\/shared","isActive":true,"type":"reference"},{"type":"text","text":" to an instance of your provider. For instance, if you select "},{"inlineContent":[{"type":"text","text":"SDWebImage"}],"type":"strong"},{"text":":","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["GIFViewProvider.shared = .sdWebImage"],"syntax":"swift"},{"type":"heading","level":3,"text":"SDWebImage (recommended)","anchor":"SDWebImage-recommended"},{"inlineContent":[{"type":"text","text":"Repository: "},{"identifier":"https:\/\/github.com\/SDWebImage\/SDWebImage","isActive":true,"type":"reference"}],"type":"paragraph"},{"syntax":"swift","code":["import BrazeUI","import SDWebImage","","extension GIFViewProvider {","","  public static let sdWebImage = Self(","    view: { SDAnimatedImageView(image: image(for: $0)) },","    updateView: { ($0 as? SDAnimatedImageView)?.image = image(for: $1) }","  )","","  private static func image(for url: URL?) -> UIImage? {","    guard let url = url else { return nil }","    return url.pathExtension == \"gif\"","      ? SDAnimatedImage(contentsOfFile: url.path)","      : UIImage(contentsOfFile: url.path)","  }","","}"],"type":"codeListing"},{"type":"heading","text":"Gifu","anchor":"Gifu","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Repository: "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/kaishin\/Gifu"}]},{"code":["import BrazeUI","import Gifu","","extension GIFViewProvider {","","  public static let gifu = Self(","    view: { url in","      let view = GIFImageView()","      guard let url = url else { return view }","      if url.pathExtension == \"gif\" {","        view.animate(withGIFURL: url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","      return view","    },","    updateView: { view, url in","      guard let view = view as? GIFImageView else { return }","      guard let url = url else {","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.animate(withGIFURL: url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"SwiftyGif","anchor":"SwiftyGif","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Repository: "},{"identifier":"https:\/\/github.com\/kirualex\/SwiftyGif","type":"reference","isActive":true}]},{"syntax":"swift","code":["import BrazeUI","import SwiftyGif","","extension GIFViewProvider {","","  public static let swiftyGif = Self(","    view: { url in","      guard let url = url else { return UIImageView() }","      if url.pathExtension == \"gif\" {","        return UIImageView(gifURL: url)","      } else {","        return UIImageView(image: .init(contentsOfFile: url.path))","      }","    },","    updateView: { view, url in","      guard let view = view as? UIImageView else { return }","      guard let url = url else {","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.setGifFromURL(url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"],"type":"codeListing"},{"text":"FLAnimatedImage","type":"heading","level":3,"anchor":"FLAnimatedImage"},{"type":"paragraph","inlineContent":[{"text":"Repository: ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/Flipboard\/FLAnimatedImage","isActive":true}]},{"syntax":"swift","type":"codeListing","code":["import BrazeUI","import FLAnimatedImage","","extension GIFViewProvider {","","  public static let flAnimatedImage = Self(","    view: { url in","      let view = FLAnimatedImageView()","      guard let url = url else { return view }","      if url.pathExtension == \"gif\" {","        view.animatedImage = FLAnimatedImage(animatedGIFData: try? Data(contentsOf: url))","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","      return view","    },","    updateView: { view, url in","      guard let view = view as? FLAnimatedImageView else { return }","      guard let url = url else {","        view.animatedImage = nil","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.animatedImage = FLAnimatedImage(animatedGIFData: try? Data(contentsOf: url))","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"]},{"text":"YYImage","level":3,"type":"heading","anchor":"YYImage"},{"type":"paragraph","inlineContent":[{"text":"Repository: ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/ibireme\/YYImage","isActive":true}]},{"code":["import BrazeUI","import YYImage","","extension GIFViewProvider {","","  public static let yyImage = Self(","    view: { url in","      guard let url = url else { return YYAnimatedImageView() }","      return YYAnimatedImageView(image: YYImage(contentsOfFile: url.path))","    },","    updateView: { view, url in","      guard let view = view as? YYAnimatedImageView else { return }","      view.image = url.flatMap { YYImage.init(contentsOfFile: $0.path) }","    }","  )","","}"],"syntax":"swift","type":"codeListing"}]}],"identifier":{"url":"doc:\/\/Braze\/documentation\/Braze\/gif-support-integrations","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Article","title":"GIF Support Integrations","role":"article","modules":[{"name":"BrazeUI"},{"name":"BrazeKit"}]},"abstract":[{"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct","type":"reference","isActive":true},{"type":"text","text":" implementations for common third party GIF images libraries."}],"references":{"https://github.com/ibireme/YYImage":{"url":"https:\/\/github.com\/ibireme\/YYImage","type":"link","identifier":"https:\/\/github.com\/ibireme\/YYImage","title":"ibireme\/YYImage","titleInlineContent":[{"text":"ibireme\/YYImage","type":"text"}]},"https://www.braze.com/docs/user_guide/message_building_by_channel/content_cards/":{"type":"link","titleInlineContent":[{"type":"text","text":"Content Cards"}],"identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","title":"Content Cards","url":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/"},"doc://Braze/tutorials/Braze/c2-contentcardsui":{"role":"project","title":"Content Cards UI","estimatedTime":"10min","type":"topic","abstract":[{"type":"text","text":"Learn how to display "},{"type":"reference","identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","isActive":true},{"text":" to your users using the Braze provided user interface.","type":"text"}],"kind":"project","url":"\/tutorials\/braze\/c2-contentcardsui","identifier":"doc:\/\/Braze\/tutorials\/Braze\/c2-contentcardsui"},"doc://Braze/documentation/BrazeUI/GIFViewProvider-swift.struct/shared":{"role":"symbol","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct\/shared","title":"shared","url":"\/documentation\/brazeui\/gifviewprovider-swift.struct\/shared","kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"text":"GIFViewProvider","preciseIdentifier":"s:7BrazeUI15GIFViewProviderV","kind":"typeIdentifier"}],"abstract":[{"text":"The GIF view provider used for all BrazeUI components.","type":"text"}]},"doc://Braze/documentation/BrazeUI/GIFViewProvider-swift.struct":{"type":"topic","abstract":[{"type":"text","text":"A type providing methods to create and update views supporting animated GIF images."}],"title":"GIFViewProvider","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"GIFViewProvider","kind":"identifier"}],"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"GIFViewProvider"}],"url":"\/documentation\/brazeui\/gifviewprovider-swift.struct"},"https://github.com/SDWebImage/SDWebImage":{"identifier":"https:\/\/github.com\/SDWebImage\/SDWebImage","title":"SDWebImage\/SDWebImage","type":"link","url":"https:\/\/github.com\/SDWebImage\/SDWebImage","titleInlineContent":[{"text":"SDWebImage\/SDWebImage","type":"text"}]},"#flanimatedimage":{"type":"link","titleInlineContent":[{"type":"text","text":"FLAnimatedImage"}],"identifier":"#flanimatedimage","title":"FLAnimatedImage","url":"#flanimatedimage"},"https://github.com/kirualex/SwiftyGif":{"url":"https:\/\/github.com\/kirualex\/SwiftyGif","type":"link","title":"kirualex\/SwiftyGif","identifier":"https:\/\/github.com\/kirualex\/SwiftyGif","titleInlineContent":[{"type":"text","text":"kirualex\/SwiftyGif"}]},"https://www.braze.com/docs/user_guide/message_building_by_channel/in-app_messages":{"type":"link","titleInlineContent":[{"text":"In-App Messages","type":"text"}],"identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages","title":"In-App Messages","url":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages"},"doc://Braze/documentation/Braze/in-app-message-customization":{"kind":"article","abstract":[{"type":"text","text":"The "},{"code":"BrazeUI","type":"codeVoice"},{"text":" module provides high quality native In-App Message UI components. These components are easily customizable to better fit the look and feel of your application.","type":"text"}],"title":"In-App Message UI Customization","type":"topic","role":"article","url":"\/documentation\/braze\/in-app-message-customization","identifier":"doc:\/\/Braze\/documentation\/Braze\/in-app-message-customization"},"doc://Braze/tutorials/Braze/c1-inappmessageui":{"type":"topic","url":"\/tutorials\/braze\/c1-inappmessageui","title":"In-App Message UI","identifier":"doc:\/\/Braze\/tutorials\/Braze\/c1-inappmessageui","estimatedTime":"10min","kind":"project","abstract":[{"text":"Learn how to display ","type":"text"},{"type":"reference","identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages","isActive":true},{"type":"text","text":" to your users using the Braze provided user interface."}],"role":"project"},"doc://Braze/documentation/Braze/content-cards-customization":{"abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"BrazeUI"},{"text":" module provides high quality native Content Cards UI components. These components are easily customizable to better fit the look and feel of your application.","type":"text"}],"kind":"article","url":"\/documentation\/braze\/content-cards-customization","title":"Content Cards UI Customization","type":"topic","role":"article","identifier":"doc:\/\/Braze\/documentation\/Braze\/content-cards-customization"},"#yyimage":{"identifier":"#yyimage","title":"YYImage","type":"link","url":"#yyimage","titleInlineContent":[{"type":"text","text":"YYImage"}]},"doc://Braze/tutorials/Braze/c3-gif-support":{"abstract":[{"text":"Learn how to add GIF images support to Braze provided user interface using third party libraries.","type":"text"}],"kind":"project","role":"project","identifier":"doc:\/\/Braze\/tutorials\/Braze\/c3-gif-support","title":"GIF Support","url":"\/tutorials\/braze\/c3-gif-support","type":"topic","estimatedTime":"5min"},"#sdwebimage-recommended":{"type":"link","titleInlineContent":[{"type":"text","text":"SDWebImage"}],"identifier":"#sdwebimage-recommended","title":"SDWebImage","url":"#sdwebimage-recommended"},"doc://Braze/documentation/BrazeUI":{"url":"\/documentation\/brazeui","kind":"symbol","title":"BrazeUI","role":"collection","abstract":[{"type":"text","text":"Braze provided user interface for In-App Messages and Content Cards."}],"identifier":"doc:\/\/Braze\/documentation\/BrazeUI","type":"topic"},"#gifu":{"identifier":"#gifu","title":"Gifu","type":"link","url":"#gifu","titleInlineContent":[{"type":"text","text":"Gifu"}]},"https://github.com/kaishin/Gifu":{"type":"link","titleInlineContent":[{"type":"text","text":"kaishin\/Gifu"}],"identifier":"https:\/\/github.com\/kaishin\/Gifu","title":"kaishin\/Gifu","url":"https:\/\/github.com\/kaishin\/Gifu"},"https://github.com/Flipboard/FLAnimatedImage":{"identifier":"https:\/\/github.com\/Flipboard\/FLAnimatedImage","title":"Flipboard\/FLAnimatedImage","type":"link","url":"https:\/\/github.com\/Flipboard\/FLAnimatedImage","titleInlineContent":[{"text":"Flipboard\/FLAnimatedImage","type":"text"}]},"#swiftygif":{"url":"#swiftygif","type":"link","title":"SwiftyGif","identifier":"#swiftygif","titleInlineContent":[{"type":"text","text":"SwiftyGif"}]},"doc://Braze/documentation/BrazeKit":{"identifier":"doc:\/\/Braze\/documentation\/BrazeKit","title":"BrazeKit","url":"\/documentation\/brazekit","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The main Braze framework providing user sessions, attributes and events logging, push notification support."}],"role":"collection"}}}