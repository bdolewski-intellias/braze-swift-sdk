{"kind":"article","hierarchy":{"paths":[["doc:\/\/Braze\/documentation\/BrazeKit"],["doc:\/\/Braze\/documentation\/BrazeUI"]]},"abstract":[{"isActive":true,"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct","type":"reference"},{"text":" implementations for common third party GIF images libraries.","type":"text"}],"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Braze does not provide animated GIF support out of the box. Support can be added by wrapping a third-party provider or your own view in an instance of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"This article presents sample implementations for popular third party libraries:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"#sdwebimage-recommended","isActive":true},{"text":" (recommended)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#gifu"}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"#swiftygif","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"#flanimatedimage","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"#yyimage"}],"type":"paragraph"}]}]},{"anchor":"Integration","type":"heading","level":3,"text":"Integration"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Choose one of the implementations below."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Install the dependency by following the instructions in the corresponding dependency repository page."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Copy and paste the sample code into a new file in your project."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Set "},{"type":"reference","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct\/shared","isActive":true},{"text":" to an instance of your provider. For instance, if you select ","type":"text"},{"type":"strong","inlineContent":[{"text":"SDWebImage","type":"text"}]},{"type":"text","text":":"}],"type":"paragraph"}]}],"type":"orderedList"},{"syntax":"swift","code":["GIFViewProvider.shared = .sdWebImage"],"type":"codeListing"},{"type":"heading","text":"SDWebImage (recommended)","level":3,"anchor":"SDWebImage-recommended"},{"inlineContent":[{"type":"text","text":"Repository: "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/SDWebImage\/SDWebImage"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import BrazeUI","import SDWebImage","","extension GIFViewProvider {","","  public static let sdWebImage = Self(","    view: { SDAnimatedImageView(image: image(for: $0)) },","    updateView: { ($0 as? SDAnimatedImageView)?.image = image(for: $1) }","  )","","  private static func image(for url: URL?) -> UIImage? {","    guard let url = url else { return nil }","    return url.pathExtension == \"gif\"","      ? SDAnimatedImage(contentsOfFile: url.path)","      : UIImage(contentsOfFile: url.path)","  }","","}"]},{"text":"Gifu","type":"heading","level":3,"anchor":"Gifu"},{"type":"paragraph","inlineContent":[{"text":"Repository: ","type":"text"},{"identifier":"https:\/\/github.com\/kaishin\/Gifu","isActive":true,"type":"reference"}]},{"code":["import BrazeUI","import Gifu","","extension GIFViewProvider {","","  public static let gifu = Self(","    view: { url in","      let view = GIFImageView()","      guard let url = url else { return view }","      if url.pathExtension == \"gif\" {","        view.animate(withGIFURL: url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","      return view","    },","    updateView: { view, url in","      guard let view = view as? GIFImageView else { return }","      guard let url = url else {","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.animate(withGIFURL: url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"],"type":"codeListing","syntax":"swift"},{"level":3,"anchor":"SwiftyGif","text":"SwiftyGif","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Repository: ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/kirualex\/SwiftyGif"}]},{"code":["import BrazeUI","import SwiftyGif","","extension GIFViewProvider {","","  public static let swiftyGif = Self(","    view: { url in","      guard let url = url else { return UIImageView() }","      if url.pathExtension == \"gif\" {","        return UIImageView(gifURL: url)","      } else {","        return UIImageView(image: .init(contentsOfFile: url.path))","      }","    },","    updateView: { view, url in","      guard let view = view as? UIImageView else { return }","      guard let url = url else {","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.setGifFromURL(url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","anchor":"FLAnimatedImage","text":"FLAnimatedImage","level":3},{"type":"paragraph","inlineContent":[{"text":"Repository: ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/Flipboard\/FLAnimatedImage"}]},{"syntax":"swift","code":["import BrazeUI","import FLAnimatedImage","","extension GIFViewProvider {","","  public static let flAnimatedImage = Self(","    view: { url in","      let view = FLAnimatedImageView()","      guard let url = url else { return view }","      if url.pathExtension == \"gif\" {","        view.animatedImage = FLAnimatedImage(animatedGIFData: try? Data(contentsOf: url))","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","      return view","    },","    updateView: { view, url in","      guard let view = view as? FLAnimatedImageView else { return }","      guard let url = url else {","        view.animatedImage = nil","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.animatedImage = FLAnimatedImage(animatedGIFData: try? Data(contentsOf: url))","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"],"type":"codeListing"},{"type":"heading","level":3,"anchor":"YYImage","text":"YYImage"},{"type":"paragraph","inlineContent":[{"text":"Repository: ","type":"text"},{"identifier":"https:\/\/github.com\/ibireme\/YYImage","isActive":true,"type":"reference"}]},{"code":["import BrazeUI","import YYImage","","extension GIFViewProvider {","","  public static let yyImage = Self(","    view: { url in","      guard let url = url else { return YYAnimatedImageView() }","      return YYAnimatedImageView(image: YYImage(contentsOfFile: url.path))","    },","    updateView: { view, url in","      guard let view = view as? YYAnimatedImageView else { return }","      view.image = url.flatMap { YYImage.init(contentsOfFile: $0.path) }","    }","  )","","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"seeAlsoSections":[{"identifiers":["doc:\/\/Braze\/tutorials\/Braze\/c1-inappmessageui","doc:\/\/Braze\/documentation\/Braze\/in-app-message-customization","doc:\/\/Braze\/tutorials\/Braze\/c2-contentcardsui","doc:\/\/Braze\/documentation\/Braze\/content-cards-customization","doc:\/\/Braze\/tutorials\/Braze\/c3-gif-support"],"title":"User Interface","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Braze\/documentation\/Braze\/gif-support-integrations"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"article","modules":[{"name":"BrazeUI"},{"name":"BrazeKit"}],"roleHeading":"Article","title":"GIF Support Integrations"},"sections":[],"references":{"#sdwebimage-recommended":{"identifier":"#sdwebimage-recommended","titleInlineContent":[{"text":"SDWebImage","type":"text"}],"type":"link","url":"#sdwebimage-recommended","title":"SDWebImage"},"doc://Braze/documentation/BrazeKit":{"type":"topic","identifier":"doc:\/\/Braze\/documentation\/BrazeKit","abstract":[{"type":"text","text":"The main Braze framework providing user sessions, attributes and events logging, push notification support."}],"kind":"symbol","role":"collection","url":"\/documentation\/brazekit","title":"BrazeKit"},"doc://Braze/documentation/Braze/in-app-message-customization":{"abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"BrazeUI"},{"text":" module provides high quality native In-App Message UI components. These components are easily customizable to better fit the look and feel of your application.","type":"text"}],"type":"topic","title":"In-App Message UI Customization","identifier":"doc:\/\/Braze\/documentation\/Braze\/in-app-message-customization","kind":"article","role":"article","url":"\/documentation\/braze\/in-app-message-customization"},"https://www.braze.com/docs/user_guide/message_building_by_channel/content_cards/":{"type":"link","url":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","title":"Content Cards","titleInlineContent":[{"text":"Content Cards","type":"text"}]},"https://github.com/kirualex/SwiftyGif":{"identifier":"https:\/\/github.com\/kirualex\/SwiftyGif","titleInlineContent":[{"type":"text","text":"kirualex\/SwiftyGif"}],"type":"link","url":"https:\/\/github.com\/kirualex\/SwiftyGif","title":"kirualex\/SwiftyGif"},"doc://Braze/documentation/BrazeUI/GIFViewProvider-swift.struct":{"url":"\/documentation\/brazeui\/gifviewprovider-swift.struct","type":"topic","kind":"symbol","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"GIFViewProvider","kind":"identifier"}],"abstract":[{"type":"text","text":"A type providing methods to create and update views supporting animated GIF images."}],"title":"GIFViewProvider","navigatorTitle":[{"text":"GIFViewProvider","kind":"identifier"}]},"https://www.braze.com/docs/user_guide/message_building_by_channel/in-app_messages":{"type":"link","url":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages","identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages","title":"In-App Messages","titleInlineContent":[{"text":"In-App Messages","type":"text"}]},"#swiftygif":{"identifier":"#swiftygif","titleInlineContent":[{"type":"text","text":"SwiftyGif"}],"type":"link","url":"#swiftygif","title":"SwiftyGif"},"doc://Braze/documentation/Braze/content-cards-customization":{"url":"\/documentation\/braze\/content-cards-customization","kind":"article","identifier":"doc:\/\/Braze\/documentation\/Braze\/content-cards-customization","type":"topic","role":"article","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"BrazeUI"},{"type":"text","text":" module provides high quality native Content Cards UI components. These components are easily customizable to better fit the look and feel of your application."}],"title":"Content Cards UI Customization"},"doc://Braze/documentation/BrazeUI/GIFViewProvider-swift.struct/shared":{"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct\/shared","title":"shared","abstract":[{"text":"The GIF view provider used for all BrazeUI components.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shared"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7BrazeUI15GIFViewProviderV","text":"GIFViewProvider","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/brazeui\/gifviewprovider-swift.struct\/shared"},"doc://Braze/tutorials/Braze/c3-gif-support":{"url":"\/tutorials\/braze\/c3-gif-support","title":"GIF Support","kind":"project","type":"topic","role":"project","identifier":"doc:\/\/Braze\/tutorials\/Braze\/c3-gif-support","estimatedTime":"5min","abstract":[{"type":"text","text":"Learn how to add GIF images support to Braze provided user interface using third party libraries."}]},"https://github.com/SDWebImage/SDWebImage":{"type":"link","url":"https:\/\/github.com\/SDWebImage\/SDWebImage","identifier":"https:\/\/github.com\/SDWebImage\/SDWebImage","title":"SDWebImage\/SDWebImage","titleInlineContent":[{"text":"SDWebImage\/SDWebImage","type":"text"}]},"doc://Braze/tutorials/Braze/c1-inappmessageui":{"kind":"project","title":"In-App Message UI","abstract":[{"text":"Learn how to display ","type":"text"},{"identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages","isActive":true,"type":"reference"},{"type":"text","text":" to your users using the Braze provided user interface."}],"estimatedTime":"10min","url":"\/tutorials\/braze\/c1-inappmessageui","type":"topic","identifier":"doc:\/\/Braze\/tutorials\/Braze\/c1-inappmessageui","role":"project"},"#yyimage":{"identifier":"#yyimage","titleInlineContent":[{"type":"text","text":"YYImage"}],"type":"link","url":"#yyimage","title":"YYImage"},"doc://Braze/tutorials/Braze/c2-contentcardsui":{"title":"Content Cards UI","kind":"project","abstract":[{"text":"Learn how to display ","type":"text"},{"identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","isActive":true,"type":"reference"},{"type":"text","text":" to your users using the Braze provided user interface."}],"estimatedTime":"10min","url":"\/tutorials\/braze\/c2-contentcardsui","identifier":"doc:\/\/Braze\/tutorials\/Braze\/c2-contentcardsui","type":"topic","role":"project"},"doc://Braze/documentation/BrazeUI":{"identifier":"doc:\/\/Braze\/documentation\/BrazeUI","role":"collection","url":"\/documentation\/brazeui","abstract":[{"type":"text","text":"Braze provided user interface for In-App Messages and Content Cards."}],"kind":"symbol","type":"topic","title":"BrazeUI"},"https://github.com/kaishin/Gifu":{"title":"kaishin\/Gifu","identifier":"https:\/\/github.com\/kaishin\/Gifu","url":"https:\/\/github.com\/kaishin\/Gifu","titleInlineContent":[{"text":"kaishin\/Gifu","type":"text"}],"type":"link"},"#gifu":{"identifier":"#gifu","titleInlineContent":[{"type":"text","text":"Gifu"}],"type":"link","url":"#gifu","title":"Gifu"},"https://github.com/ibireme/YYImage":{"type":"link","url":"https:\/\/github.com\/ibireme\/YYImage","identifier":"https:\/\/github.com\/ibireme\/YYImage","title":"ibireme\/YYImage","titleInlineContent":[{"type":"text","text":"ibireme\/YYImage"}]},"https://github.com/Flipboard/FLAnimatedImage":{"identifier":"https:\/\/github.com\/Flipboard\/FLAnimatedImage","titleInlineContent":[{"text":"Flipboard\/FLAnimatedImage","type":"text"}],"type":"link","url":"https:\/\/github.com\/Flipboard\/FLAnimatedImage","title":"Flipboard\/FLAnimatedImage"},"#flanimatedimage":{"title":"FLAnimatedImage","identifier":"#flanimatedimage","url":"#flanimatedimage","titleInlineContent":[{"type":"text","text":"FLAnimatedImage"}],"type":"link"}}}