{"metadata":{"role":"article","modules":[{"name":"BrazeKit"},{"name":"BrazeUI"}],"title":"GIF Support Integrations","roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/Braze\/documentation\/BrazeKit"],["doc:\/\/Braze\/documentation\/BrazeUI"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct"},{"text":" implementations for common third party GIF images libraries.","type":"text"}],"kind":"article","identifier":{"url":"doc:\/\/Braze\/documentation\/Braze\/gif-support-integrations","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"User Interface","identifiers":["doc:\/\/Braze\/tutorials\/Braze\/c1-inappmessageui","doc:\/\/Braze\/documentation\/Braze\/in-app-message-customization","doc:\/\/Braze\/tutorials\/Braze\/c2-contentcardsui","doc:\/\/Braze\/documentation\/Braze\/content-cards-customization","doc:\/\/Braze\/tutorials\/Braze\/c3-gif-support"],"generated":true}],"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Braze does not provide animated GIF support out of the box. Support can be added by wrapping a third-party provider or your own view in an instance of "},{"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This article presents sample implementations for popular third party libraries:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"#sdwebimage-recommended","type":"reference","isActive":true},{"text":" (recommended)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"#gifu","type":"reference"}]}]},{"content":[{"inlineContent":[{"identifier":"#swiftygif","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#flanimatedimage"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"#yyimage","isActive":true}]}]}],"type":"unorderedList"},{"text":"Integration","anchor":"Integration","type":"heading","level":3},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Choose one of the implementations below."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Install the dependency by following the instructions in the corresponding dependency repository page.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Copy and paste the sample code into a new file in your project."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Set "},{"isActive":true,"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct\/shared","type":"reference"},{"type":"text","text":" to an instance of your provider. For instance, if you select "},{"type":"strong","inlineContent":[{"type":"text","text":"SDWebImage"}]},{"type":"text","text":":"}],"type":"paragraph"}]}]},{"code":["GIFViewProvider.shared = .sdWebImage"],"syntax":"swift","type":"codeListing"},{"text":"SDWebImage (recommended)","type":"heading","anchor":"SDWebImage-recommended","level":3},{"type":"paragraph","inlineContent":[{"text":"Repository: ","type":"text"},{"identifier":"https:\/\/github.com\/SDWebImage\/SDWebImage","isActive":true,"type":"reference"}]},{"type":"codeListing","syntax":"swift","code":["import BrazeUI","import SDWebImage","","extension GIFViewProvider {","","  public static let sdWebImage = Self(","    view: { SDAnimatedImageView(image: image(for: $0)) },","    updateView: { ($0 as? SDAnimatedImageView)?.image = image(for: $1) }","  )","","  private static func image(for url: URL?) -> UIImage? {","    guard let url = url else { return nil }","    return url.pathExtension == \"gif\"","      ? SDAnimatedImage(contentsOfFile: url.path)","      : UIImage(contentsOfFile: url.path)","  }","","}"]},{"type":"heading","text":"Gifu","anchor":"Gifu","level":3},{"type":"paragraph","inlineContent":[{"text":"Repository: ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/kaishin\/Gifu","isActive":true}]},{"type":"codeListing","syntax":"swift","code":["import BrazeUI","import Gifu","","extension GIFViewProvider {","","  public static let gifu = Self(","    view: { url in","      let view = GIFImageView()","      guard let url = url else { return view }","      if url.pathExtension == \"gif\" {","        view.animate(withGIFURL: url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","      return view","    },","    updateView: { view, url in","      guard let view = view as? GIFImageView else { return }","      guard let url = url else {","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.animate(withGIFURL: url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"]},{"anchor":"SwiftyGif","level":3,"text":"SwiftyGif","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Repository: ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/kirualex\/SwiftyGif"}]},{"syntax":"swift","code":["import BrazeUI","import SwiftyGif","","extension GIFViewProvider {","","  public static let swiftyGif = Self(","    view: { url in","      guard let url = url else { return UIImageView() }","      if url.pathExtension == \"gif\" {","        return UIImageView(gifURL: url)","      } else {","        return UIImageView(image: .init(contentsOfFile: url.path))","      }","    },","    updateView: { view, url in","      guard let view = view as? UIImageView else { return }","      guard let url = url else {","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.setGifFromURL(url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"],"type":"codeListing"},{"type":"heading","level":3,"anchor":"FLAnimatedImage","text":"FLAnimatedImage"},{"inlineContent":[{"type":"text","text":"Repository: "},{"identifier":"https:\/\/github.com\/Flipboard\/FLAnimatedImage","type":"reference","isActive":true}],"type":"paragraph"},{"code":["import BrazeUI","import FLAnimatedImage","","extension GIFViewProvider {","","  public static let flAnimatedImage = Self(","    view: { url in","      let view = FLAnimatedImageView()","      guard let url = url else { return view }","      if url.pathExtension == \"gif\" {","        view.animatedImage = FLAnimatedImage(animatedGIFData: try? Data(contentsOf: url))","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","      return view","    },","    updateView: { view, url in","      guard let view = view as? FLAnimatedImageView else { return }","      guard let url = url else {","        view.animatedImage = nil","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.animatedImage = FLAnimatedImage(animatedGIFData: try? Data(contentsOf: url))","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"],"syntax":"swift","type":"codeListing"},{"anchor":"YYImage","type":"heading","text":"YYImage","level":3},{"inlineContent":[{"type":"text","text":"Repository: "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/ibireme\/YYImage"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import BrazeUI","import YYImage","","extension GIFViewProvider {","","  public static let yyImage = Self(","    view: { url in","      guard let url = url else { return YYAnimatedImageView() }","      return YYAnimatedImageView(image: YYImage(contentsOfFile: url.path))","    },","    updateView: { view, url in","      guard let view = view as? YYAnimatedImageView else { return }","      view.image = url.flatMap { YYImage.init(contentsOfFile: $0.path) }","    }","  )","","}"]}],"kind":"content"}],"sections":[],"references":{"https://www.braze.com/docs/user_guide/message_building_by_channel/content_cards/":{"identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","titleInlineContent":[{"text":"Content Cards","type":"text"}],"title":"Content Cards","url":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","type":"link"},"doc://Braze/documentation/BrazeUI/GIFViewProvider-swift.struct/shared":{"type":"topic","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct\/shared","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GIFViewProvider","preciseIdentifier":"s:7BrazeUI15GIFViewProviderV"}],"abstract":[{"type":"text","text":"The GIF view provider used for all BrazeUI components."}],"url":"\/documentation\/brazeui\/gifviewprovider-swift.struct\/shared","title":"shared"},"doc://Braze/tutorials/Braze/c3-gif-support":{"role":"project","abstract":[{"text":"Learn how to add GIF images support to Braze provided user interface using third party libraries.","type":"text"}],"identifier":"doc:\/\/Braze\/tutorials\/Braze\/c3-gif-support","title":"GIF Support","estimatedTime":"5min","type":"topic","kind":"project","url":"\/tutorials\/braze\/c3-gif-support"},"#gifu":{"identifier":"#gifu","title":"Gifu","titleInlineContent":[{"type":"text","text":"Gifu"}],"url":"#gifu","type":"link"},"doc://Braze/tutorials/Braze/c1-inappmessageui":{"abstract":[{"text":"Learn how to display ","type":"text"},{"identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages","isActive":true,"type":"reference"},{"text":" to your users using the Braze provided user interface.","type":"text"}],"estimatedTime":"10min","kind":"project","url":"\/tutorials\/braze\/c1-inappmessageui","type":"topic","role":"project","title":"In-App Message UI","identifier":"doc:\/\/Braze\/tutorials\/Braze\/c1-inappmessageui"},"https://github.com/kaishin/Gifu":{"identifier":"https:\/\/github.com\/kaishin\/Gifu","titleInlineContent":[{"type":"text","text":"kaishin\/Gifu"}],"title":"kaishin\/Gifu","url":"https:\/\/github.com\/kaishin\/Gifu","type":"link"},"#sdwebimage-recommended":{"identifier":"#sdwebimage-recommended","title":"SDWebImage","titleInlineContent":[{"text":"SDWebImage","type":"text"}],"url":"#sdwebimage-recommended","type":"link"},"#swiftygif":{"type":"link","titleInlineContent":[{"type":"text","text":"SwiftyGif"}],"identifier":"#swiftygif","title":"SwiftyGif","url":"#swiftygif"},"doc://Braze/documentation/BrazeUI/GIFViewProvider-swift.struct":{"navigatorTitle":[{"kind":"identifier","text":"GIFViewProvider"}],"title":"GIFViewProvider","kind":"symbol","url":"\/documentation\/brazeui\/gifviewprovider-swift.struct","role":"symbol","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"GIFViewProvider"}],"abstract":[{"text":"A type providing methods to create and update views supporting animated GIF images.","type":"text"}]},"doc://Braze/documentation/BrazeKit":{"type":"topic","abstract":[{"type":"text","text":"The main Braze framework providing user sessions, attributes and events logging, push notification support."}],"url":"\/documentation\/brazekit","kind":"symbol","title":"BrazeKit","role":"collection","identifier":"doc:\/\/Braze\/documentation\/BrazeKit"},"https://github.com/kirualex/SwiftyGif":{"identifier":"https:\/\/github.com\/kirualex\/SwiftyGif","title":"kirualex\/SwiftyGif","titleInlineContent":[{"type":"text","text":"kirualex\/SwiftyGif"}],"url":"https:\/\/github.com\/kirualex\/SwiftyGif","type":"link"},"https://github.com/Flipboard/FLAnimatedImage":{"type":"link","titleInlineContent":[{"text":"Flipboard\/FLAnimatedImage","type":"text"}],"identifier":"https:\/\/github.com\/Flipboard\/FLAnimatedImage","title":"Flipboard\/FLAnimatedImage","url":"https:\/\/github.com\/Flipboard\/FLAnimatedImage"},"https://github.com/ibireme/YYImage":{"identifier":"https:\/\/github.com\/ibireme\/YYImage","title":"ibireme\/YYImage","titleInlineContent":[{"type":"text","text":"ibireme\/YYImage"}],"url":"https:\/\/github.com\/ibireme\/YYImage","type":"link"},"#flanimatedimage":{"type":"link","titleInlineContent":[{"text":"FLAnimatedImage","type":"text"}],"identifier":"#flanimatedimage","title":"FLAnimatedImage","url":"#flanimatedimage"},"doc://Braze/documentation/BrazeUI":{"title":"BrazeUI","role":"collection","url":"\/documentation\/brazeui","identifier":"doc:\/\/Braze\/documentation\/BrazeUI","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Braze provided user interface for In-App Messages and Content Cards."}]},"doc://Braze/documentation/Braze/content-cards-customization":{"url":"\/documentation\/braze\/content-cards-customization","role":"article","type":"topic","kind":"article","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"BrazeUI"},{"type":"text","text":" module provides high quality native Content Cards UI components. These components are easily customizable to better fit the look and feel of your application."}],"identifier":"doc:\/\/Braze\/documentation\/Braze\/content-cards-customization","title":"Content Cards UI Customization"},"doc://Braze/documentation/Braze/in-app-message-customization":{"url":"\/documentation\/braze\/in-app-message-customization","role":"article","type":"topic","kind":"article","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"BrazeUI"},{"type":"text","text":" module provides high quality native In-App Message UI components. These components are easily customizable to better fit the look and feel of your application."}],"identifier":"doc:\/\/Braze\/documentation\/Braze\/in-app-message-customization","title":"In-App Message UI Customization"},"doc://Braze/tutorials/Braze/c2-contentcardsui":{"abstract":[{"text":"Learn how to display ","type":"text"},{"identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","isActive":true,"type":"reference"},{"text":" to your users using the Braze provided user interface.","type":"text"}],"estimatedTime":"10min","kind":"project","url":"\/tutorials\/braze\/c2-contentcardsui","type":"topic","role":"project","title":"Content Cards UI","identifier":"doc:\/\/Braze\/tutorials\/Braze\/c2-contentcardsui"},"https://github.com/SDWebImage/SDWebImage":{"identifier":"https:\/\/github.com\/SDWebImage\/SDWebImage","title":"SDWebImage\/SDWebImage","titleInlineContent":[{"text":"SDWebImage\/SDWebImage","type":"text"}],"url":"https:\/\/github.com\/SDWebImage\/SDWebImage","type":"link"},"#yyimage":{"type":"link","titleInlineContent":[{"type":"text","text":"YYImage"}],"identifier":"#yyimage","title":"YYImage","url":"#yyimage"},"https://www.braze.com/docs/user_guide/message_building_by_channel/in-app_messages":{"identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages","titleInlineContent":[{"type":"text","text":"In-App Messages"}],"title":"In-App Messages","url":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages","type":"link"}}}