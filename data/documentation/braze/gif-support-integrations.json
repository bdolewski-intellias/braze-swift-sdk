{"kind":"article","primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"Braze does not provide animated GIF support out of the box. Support can be added by wrapping a third-party provider or your own view in an instance of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This article presents sample implementations for popular third party libraries:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"#sdwebimage-recommended"},{"text":" (recommended)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#gifu"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"#swiftygif","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#flanimatedimage"}]}]},{"content":[{"inlineContent":[{"identifier":"#yyimage","type":"reference","isActive":true}],"type":"paragraph"}]}]},{"type":"heading","text":"Integration","anchor":"Integration","level":3},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Choose one of the implementations below."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Install the dependency by following the instructions in the corresponding dependency repository page."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Copy and paste the sample code into a new file in your project."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Set "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider\/shared"},{"text":" to an instance of your provider. For instance, if you select ","type":"text"},{"type":"strong","inlineContent":[{"text":"SDWebImage","type":"text"}]},{"text":":","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["GIFViewProvider.shared = .sdWebImage"],"syntax":"swift"},{"text":"SDWebImage (recommended)","level":3,"type":"heading","anchor":"SDWebImage-recommended"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Repository: "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/SDWebImage\/SDWebImage"}]},{"syntax":"swift","type":"codeListing","code":["import BrazeUI","import SDWebImage","","extension GIFViewProvider {","","  public static let sdWebImage = Self(","    view: { SDAnimatedImageView(image: image(for: $0)) },","    updateView: { ($0 as? SDAnimatedImageView)?.image = image(for: $1) }","  )","","  private static func image(for url: URL?) -> UIImage? {","    guard let url = url else { return nil }","    return url.pathExtension == \"gif\"","      ? SDAnimatedImage(contentsOfFile: url.path)","      : UIImage(contentsOfFile: url.path)","  }","","}"]},{"text":"Gifu","level":3,"anchor":"Gifu","type":"heading"},{"inlineContent":[{"text":"Repository: ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/kaishin\/Gifu","isActive":true}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import BrazeUI","import Gifu","","extension GIFViewProvider {","","  public static let gifu = Self(","    view: { url in","      let view = GIFImageView()","      guard let url = url else { return view }","      if url.pathExtension == \"gif\" {","        view.animate(withGIFURL: url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","      return view","    },","    updateView: { view, url in","      guard let view = view as? GIFImageView else { return }","      guard let url = url else {","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.animate(withGIFURL: url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"]},{"text":"SwiftyGif","level":3,"type":"heading","anchor":"SwiftyGif"},{"inlineContent":[{"type":"text","text":"Repository: "},{"identifier":"https:\/\/github.com\/kirualex\/SwiftyGif","type":"reference","isActive":true}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import BrazeUI","import SwiftyGif","","extension GIFViewProvider {","","  public static let swiftyGif = Self(","    view: { url in","      guard let url = url else { return UIImageView() }","      if url.pathExtension == \"gif\" {","        return UIImageView(gifURL: url)","      } else {","        return UIImageView(image: .init(contentsOfFile: url.path))","      }","    },","    updateView: { view, url in","      guard let view = view as? UIImageView else { return }","      guard let url = url else {","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.setGifFromURL(url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"]},{"level":3,"type":"heading","text":"FLAnimatedImage","anchor":"FLAnimatedImage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Repository: "},{"type":"reference","identifier":"https:\/\/github.com\/Flipboard\/FLAnimatedImage","isActive":true}]},{"code":["import BrazeUI","import FLAnimatedImage","","extension GIFViewProvider {","","  public static let flAnimatedImage = Self(","    view: { url in","      let view = FLAnimatedImageView()","      guard let url = url else { return view }","      if url.pathExtension == \"gif\" {","        view.animatedImage = FLAnimatedImage(animatedGIFData: try? Data(contentsOf: url))","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","      return view","    },","    updateView: { view, url in","      guard let view = view as? FLAnimatedImageView else { return }","      guard let url = url else {","        view.animatedImage = nil","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.animatedImage = FLAnimatedImage(animatedGIFData: try? Data(contentsOf: url))","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"],"type":"codeListing","syntax":"swift"},{"anchor":"YYImage","level":3,"text":"YYImage","type":"heading"},{"inlineContent":[{"type":"text","text":"Repository: "},{"isActive":true,"identifier":"https:\/\/github.com\/ibireme\/YYImage","type":"reference"}],"type":"paragraph"},{"syntax":"swift","code":["import BrazeUI","import YYImage","","extension GIFViewProvider {","","  public static let yyImage = Self(","    view: { url in","      guard let url = url else { return YYAnimatedImageView() }","      return YYAnimatedImageView(image: YYImage(contentsOfFile: url.path))","    },","    updateView: { view, url in","      guard let view = view as? YYAnimatedImageView else { return }","      view.image = url.flatMap { YYImage.init(contentsOfFile: $0.path) }","    }","  )","","}"],"type":"codeListing"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider"},{"type":"text","text":" implementations for common third party GIF images libraries."}],"identifier":{"url":"doc:\/\/Braze\/documentation\/Braze\/gif-support-integrations","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"User Interface","identifiers":["doc:\/\/Braze\/tutorials\/Braze\/c1-inappmessageui","doc:\/\/Braze\/documentation\/Braze\/in-app-message-customization","doc:\/\/Braze\/tutorials\/Braze\/c2-contentcardsui","doc:\/\/Braze\/documentation\/Braze\/content-cards-customization","doc:\/\/Braze\/tutorials\/Braze\/c3-gif-support"],"generated":true}],"sections":[],"metadata":{"modules":[{"name":"BrazeKit"},{"name":"BrazeUI"}],"roleHeading":"Article","role":"article","title":"GIF Support Integrations"},"hierarchy":{"paths":[["doc:\/\/Braze\/documentation\/BrazeKit"],["doc:\/\/Braze\/documentation\/BrazeUI"]]},"references":{"https://github.com/SDWebImage/SDWebImage":{"title":"SDWebImage\/SDWebImage","type":"link","identifier":"https:\/\/github.com\/SDWebImage\/SDWebImage","titleInlineContent":[{"type":"text","text":"SDWebImage\/SDWebImage"}],"url":"https:\/\/github.com\/SDWebImage\/SDWebImage"},"doc://Braze/documentation/BrazeUI/GIFViewProvider/shared":{"kind":"symbol","title":"shared","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7BrazeUI15GIFViewProviderV","text":"GIFViewProvider"}],"abstract":[{"type":"text","text":"The GIF view provider used for all BrazeUI components."}],"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider\/shared","url":"\/documentation\/brazeui\/gifviewprovider\/shared","type":"topic","role":"symbol"},"doc://Braze/documentation/Braze/in-app-message-customization":{"role":"article","type":"topic","url":"\/documentation\/braze\/in-app-message-customization","identifier":"doc:\/\/Braze\/documentation\/Braze\/in-app-message-customization","title":"In-App Message UI Customization","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"BrazeUI"},{"type":"text","text":" module provides high quality native In-App Message UI components. These components are easily customizable to better fit the look and feel of your application."}],"kind":"article"},"https://github.com/Flipboard/FLAnimatedImage":{"url":"https:\/\/github.com\/Flipboard\/FLAnimatedImage","title":"Flipboard\/FLAnimatedImage","titleInlineContent":[{"text":"Flipboard\/FLAnimatedImage","type":"text"}],"type":"link","identifier":"https:\/\/github.com\/Flipboard\/FLAnimatedImage"},"doc://Braze/documentation/Braze/content-cards-customization":{"identifier":"doc:\/\/Braze\/documentation\/Braze\/content-cards-customization","url":"\/documentation\/braze\/content-cards-customization","abstract":[{"type":"text","text":"The "},{"code":"BrazeUI","type":"codeVoice"},{"text":" module provides high quality native Content Cards UI components. These components are easily customizable to better fit the look and feel of your application.","type":"text"}],"type":"topic","role":"article","kind":"article","title":"Content Cards UI Customization"},"https://github.com/kaishin/Gifu":{"identifier":"https:\/\/github.com\/kaishin\/Gifu","type":"link","titleInlineContent":[{"type":"text","text":"kaishin\/Gifu"}],"url":"https:\/\/github.com\/kaishin\/Gifu","title":"kaishin\/Gifu"},"doc://Braze/tutorials/Braze/c3-gif-support":{"estimatedTime":"5min","abstract":[{"type":"text","text":"Learn how to add GIF images support to Braze provided user interface using third party libraries."}],"title":"GIF Support","identifier":"doc:\/\/Braze\/tutorials\/Braze\/c3-gif-support","type":"topic","url":"\/tutorials\/braze\/c3-gif-support","kind":"project","role":"project"},"https://github.com/kirualex/SwiftyGif":{"url":"https:\/\/github.com\/kirualex\/SwiftyGif","title":"kirualex\/SwiftyGif","titleInlineContent":[{"text":"kirualex\/SwiftyGif","type":"text"}],"type":"link","identifier":"https:\/\/github.com\/kirualex\/SwiftyGif"},"#gifu":{"identifier":"#gifu","type":"link","titleInlineContent":[{"type":"text","text":"Gifu"}],"url":"#gifu","title":"Gifu"},"#swiftygif":{"url":"#swiftygif","title":"SwiftyGif","titleInlineContent":[{"type":"text","text":"SwiftyGif"}],"identifier":"#swiftygif","type":"link"},"#yyimage":{"identifier":"#yyimage","type":"link","titleInlineContent":[{"text":"YYImage","type":"text"}],"url":"#yyimage","title":"YYImage"},"https://github.com/ibireme/YYImage":{"url":"https:\/\/github.com\/ibireme\/YYImage","title":"ibireme\/YYImage","titleInlineContent":[{"text":"ibireme\/YYImage","type":"text"}],"type":"link","identifier":"https:\/\/github.com\/ibireme\/YYImage"},"doc://Braze/documentation/BrazeKit":{"type":"topic","role":"collection","url":"\/documentation\/brazekit","abstract":[{"text":"The main Braze framework providing user sessions, attributes and events logging, push notification support.","type":"text"}],"identifier":"doc:\/\/Braze\/documentation\/BrazeKit","title":"BrazeKit","kind":"symbol"},"doc://Braze/tutorials/Braze/c2-contentcardsui":{"estimatedTime":"10min","identifier":"doc:\/\/Braze\/tutorials\/Braze\/c2-contentcardsui","url":"\/tutorials\/braze\/c2-contentcardsui","abstract":[{"text":"Learn how to display ","type":"text"},{"identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","isActive":true,"type":"reference"},{"type":"text","text":" to your users using the Braze provided user interface."}],"type":"topic","role":"project","kind":"project","title":"Content Cards UI"},"#sdwebimage-recommended":{"identifier":"#sdwebimage-recommended","type":"link","titleInlineContent":[{"type":"text","text":"SDWebImage"}],"url":"#sdwebimage-recommended","title":"SDWebImage"},"#flanimatedimage":{"url":"#flanimatedimage","title":"FLAnimatedImage","titleInlineContent":[{"type":"text","text":"FLAnimatedImage"}],"identifier":"#flanimatedimage","type":"link"},"doc://Braze/documentation/BrazeUI/GIFViewProvider":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"GIFViewProvider","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"GIFViewProvider"}],"abstract":[{"type":"text","text":"A type providing methods to create and update views supporting animated GIF images."}],"title":"GIFViewProvider","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider","type":"topic","url":"\/documentation\/brazeui\/gifviewprovider","kind":"symbol","role":"symbol"},"doc://Braze/tutorials/Braze/c1-inappmessageui":{"abstract":[{"text":"Learn how to display ","type":"text"},{"type":"reference","identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages","isActive":true},{"type":"text","text":" to your users using the Braze provided user interface."}],"kind":"project","title":"In-App Message UI","estimatedTime":"10min","url":"\/tutorials\/braze\/c1-inappmessageui","identifier":"doc:\/\/Braze\/tutorials\/Braze\/c1-inappmessageui","role":"project","type":"topic"},"https://www.braze.com/docs/user_guide/message_building_by_channel/in-app_messages":{"identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages","type":"link","titleInlineContent":[{"text":"In-App Messages","type":"text"}],"url":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages","title":"In-App Messages"},"doc://Braze/documentation/BrazeUI":{"role":"collection","url":"\/documentation\/brazeui","type":"topic","abstract":[{"type":"text","text":"Braze provided user interface for In-App Messages and Content Cards."}],"identifier":"doc:\/\/Braze\/documentation\/BrazeUI","kind":"symbol","title":"BrazeUI"},"https://www.braze.com/docs/user_guide/message_building_by_channel/content_cards/":{"url":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","title":"Content Cards","titleInlineContent":[{"type":"text","text":"Content Cards"}],"identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","type":"link"}}}