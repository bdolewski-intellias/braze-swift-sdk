{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Braze\/documentation\/BrazeKit"],["doc:\/\/Braze\/documentation\/BrazeUI"]]},"metadata":{"modules":[{"name":"BrazeKit"},{"name":"BrazeUI"}],"title":"GIF Support Integrations","roleHeading":"Article","role":"article"},"kind":"article","seeAlsoSections":[{"title":"User Interface","generated":true,"identifiers":["doc:\/\/Braze\/tutorials\/Braze\/c1-inappmessageui","doc:\/\/Braze\/documentation\/Braze\/in-app-message-customization","doc:\/\/Braze\/tutorials\/Braze\/c2-contentcardsui","doc:\/\/Braze\/documentation\/Braze\/content-cards-customization","doc:\/\/Braze\/tutorials\/Braze\/c3-gif-support"]}],"primaryContentSections":[{"content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Braze does not provide animated GIF support out of the box. Support can be added by wrapping a third-party provider or your own view in an instance of "},{"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"This article presents sample implementations for popular third party libraries:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"#sdwebimage-recommended","type":"reference"},{"type":"text","text":" (recommended)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"#gifu"}]}]},{"content":[{"inlineContent":[{"isActive":true,"identifier":"#swiftygif","type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"#flanimatedimage","isActive":true}]}]},{"content":[{"inlineContent":[{"identifier":"#yyimage","type":"reference","isActive":true}],"type":"paragraph"}]}]},{"level":3,"text":"Integration","anchor":"Integration","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Choose one of the implementations below.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Install the dependency by following the instructions in the corresponding dependency repository page.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Copy and paste the sample code into a new file in your project."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Set "},{"type":"reference","identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct\/shared","isActive":true},{"text":" to an instance of your provider. For instance, if you select ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"SDWebImage"}]},{"text":":","type":"text"}]}]}],"type":"orderedList"},{"code":["GIFViewProvider.shared = .sdWebImage"],"syntax":"swift","type":"codeListing"},{"text":"SDWebImage (recommended)","level":3,"anchor":"SDWebImage-recommended","type":"heading"},{"inlineContent":[{"text":"Repository: ","type":"text"},{"identifier":"https:\/\/github.com\/SDWebImage\/SDWebImage","isActive":true,"type":"reference"}],"type":"paragraph"},{"syntax":"swift","code":["import BrazeUI","import SDWebImage","","extension GIFViewProvider {","","  public static let sdWebImage = Self(","    view: { SDAnimatedImageView(image: image(for: $0)) },","    updateView: { ($0 as? SDAnimatedImageView)?.image = image(for: $1) }","  )","","  private static func image(for url: URL?) -> UIImage? {","    guard let url = url else { return nil }","    return url.pathExtension == \"gif\"","      ? SDAnimatedImage(contentsOfFile: url.path)","      : UIImage(contentsOfFile: url.path)","  }","","}"],"type":"codeListing"},{"type":"heading","level":3,"text":"Gifu","anchor":"Gifu"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Repository: "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/kaishin\/Gifu"}]},{"code":["import BrazeUI","import Gifu","","extension GIFViewProvider {","","  public static let gifu = Self(","    view: { url in","      let view = GIFImageView()","      guard let url = url else { return view }","      if url.pathExtension == \"gif\" {","        view.animate(withGIFURL: url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","      return view","    },","    updateView: { view, url in","      guard let view = view as? GIFImageView else { return }","      guard let url = url else {","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.animate(withGIFURL: url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"],"syntax":"swift","type":"codeListing"},{"type":"heading","level":3,"anchor":"SwiftyGif","text":"SwiftyGif"},{"inlineContent":[{"type":"text","text":"Repository: "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/kirualex\/SwiftyGif"}],"type":"paragraph"},{"type":"codeListing","code":["import BrazeUI","import SwiftyGif","","extension GIFViewProvider {","","  public static let swiftyGif = Self(","    view: { url in","      guard let url = url else { return UIImageView() }","      if url.pathExtension == \"gif\" {","        return UIImageView(gifURL: url)","      } else {","        return UIImageView(image: .init(contentsOfFile: url.path))","      }","    },","    updateView: { view, url in","      guard let view = view as? UIImageView else { return }","      guard let url = url else {","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.setGifFromURL(url)","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"],"syntax":"swift"},{"anchor":"FLAnimatedImage","text":"FLAnimatedImage","level":3,"type":"heading"},{"inlineContent":[{"text":"Repository: ","type":"text"},{"identifier":"https:\/\/github.com\/Flipboard\/FLAnimatedImage","type":"reference","isActive":true}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import BrazeUI","import FLAnimatedImage","","extension GIFViewProvider {","","  public static let flAnimatedImage = Self(","    view: { url in","      let view = FLAnimatedImageView()","      guard let url = url else { return view }","      if url.pathExtension == \"gif\" {","        view.animatedImage = FLAnimatedImage(animatedGIFData: try? Data(contentsOf: url))","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","      return view","    },","    updateView: { view, url in","      guard let view = view as? FLAnimatedImageView else { return }","      guard let url = url else {","        view.animatedImage = nil","        view.image = nil","        return","      }","      if url.pathExtension == \"gif\" {","        view.animatedImage = FLAnimatedImage(animatedGIFData: try? Data(contentsOf: url))","      } else {","        view.image = UIImage(contentsOfFile: url.path)","      }","    }","  )","","}"]},{"text":"YYImage","type":"heading","anchor":"YYImage","level":3},{"type":"paragraph","inlineContent":[{"text":"Repository: ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/ibireme\/YYImage"}]},{"syntax":"swift","type":"codeListing","code":["import BrazeUI","import YYImage","","extension GIFViewProvider {","","  public static let yyImage = Self(","    view: { url in","      guard let url = url else { return YYAnimatedImageView() }","      return YYAnimatedImageView(image: YYImage(contentsOfFile: url.path))","    },","    updateView: { view, url in","      guard let view = view as? YYAnimatedImageView else { return }","      view.image = url.flatMap { YYImage.init(contentsOfFile: $0.path) }","    }","  )","","}"]}],"kind":"content"}],"identifier":{"url":"doc:\/\/Braze\/documentation\/Braze\/gif-support-integrations","interfaceLanguage":"swift"},"abstract":[{"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct","isActive":true,"type":"reference"},{"type":"text","text":" implementations for common third party GIF images libraries."}],"sections":[],"references":{"doc://Braze/documentation/Braze/in-app-message-customization":{"type":"topic","kind":"article","url":"\/documentation\/braze\/in-app-message-customization","role":"article","abstract":[{"text":"The ","type":"text"},{"code":"BrazeUI","type":"codeVoice"},{"type":"text","text":" module provides high quality native In-App Message UI components. These components are easily customizable to better fit the look and feel of your application."}],"identifier":"doc:\/\/Braze\/documentation\/Braze\/in-app-message-customization","title":"In-App Message UI Customization"},"doc://Braze/documentation/BrazeKit":{"identifier":"doc:\/\/Braze\/documentation\/BrazeKit","kind":"symbol","abstract":[{"text":"The main Braze framework providing user sessions, attributes and events logging, push notification support.","type":"text"}],"type":"topic","title":"BrazeKit","role":"collection","url":"\/documentation\/brazekit"},"#sdwebimage-recommended":{"titleInlineContent":[{"text":"SDWebImage","type":"text"}],"url":"#sdwebimage-recommended","type":"link","identifier":"#sdwebimage-recommended","title":"SDWebImage"},"doc://Braze/tutorials/Braze/c3-gif-support":{"url":"\/tutorials\/braze\/c3-gif-support","kind":"project","role":"project","abstract":[{"text":"Learn how to add GIF images support to Braze provided user interface using third party libraries.","type":"text"}],"identifier":"doc:\/\/Braze\/tutorials\/Braze\/c3-gif-support","type":"topic","title":"GIF Support","estimatedTime":"5min"},"#flanimatedimage":{"url":"#flanimatedimage","title":"FLAnimatedImage","identifier":"#flanimatedimage","type":"link","titleInlineContent":[{"text":"FLAnimatedImage","type":"text"}]},"https://github.com/kaishin/Gifu":{"titleInlineContent":[{"type":"text","text":"kaishin\/Gifu"}],"url":"https:\/\/github.com\/kaishin\/Gifu","title":"kaishin\/Gifu","type":"link","identifier":"https:\/\/github.com\/kaishin\/Gifu"},"https://github.com/ibireme/YYImage":{"url":"https:\/\/github.com\/ibireme\/YYImage","title":"ibireme\/YYImage","identifier":"https:\/\/github.com\/ibireme\/YYImage","type":"link","titleInlineContent":[{"text":"ibireme\/YYImage","type":"text"}]},"doc://Braze/documentation/BrazeUI":{"identifier":"doc:\/\/Braze\/documentation\/BrazeUI","abstract":[{"type":"text","text":"Braze provided user interface for In-App Messages and Content Cards."}],"url":"\/documentation\/brazeui","title":"BrazeUI","kind":"symbol","role":"collection","type":"topic"},"doc://Braze/documentation/Braze/content-cards-customization":{"type":"topic","kind":"article","url":"\/documentation\/braze\/content-cards-customization","role":"article","abstract":[{"text":"The ","type":"text"},{"code":"BrazeUI","type":"codeVoice"},{"text":" module provides high quality native Content Cards UI components. These components are easily customizable to better fit the look and feel of your application.","type":"text"}],"identifier":"doc:\/\/Braze\/documentation\/Braze\/content-cards-customization","title":"Content Cards UI Customization"},"https://www.braze.com/docs/user_guide/message_building_by_channel/in-app_messages":{"url":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages","title":"In-App Messages","identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages","type":"link","titleInlineContent":[{"type":"text","text":"In-App Messages"}]},"https://www.braze.com/docs/user_guide/message_building_by_channel/content_cards/":{"titleInlineContent":[{"text":"Content Cards","type":"text"}],"url":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","type":"link","identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","title":"Content Cards"},"doc://Braze/tutorials/Braze/c2-contentcardsui":{"type":"topic","estimatedTime":"10min","kind":"project","url":"\/tutorials\/braze\/c2-contentcardsui","role":"project","abstract":[{"text":"Learn how to display ","type":"text"},{"identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/content_cards\/","type":"reference","isActive":true},{"text":" to your users using the Braze provided user interface.","type":"text"}],"identifier":"doc:\/\/Braze\/tutorials\/Braze\/c2-contentcardsui","title":"Content Cards UI"},"#gifu":{"titleInlineContent":[{"type":"text","text":"Gifu"}],"url":"#gifu","title":"Gifu","type":"link","identifier":"#gifu"},"#yyimage":{"url":"#yyimage","title":"YYImage","identifier":"#yyimage","type":"link","titleInlineContent":[{"type":"text","text":"YYImage"}]},"#swiftygif":{"titleInlineContent":[{"type":"text","text":"SwiftyGif"}],"url":"#swiftygif","title":"SwiftyGif","type":"link","identifier":"#swiftygif"},"doc://Braze/documentation/BrazeUI/GIFViewProvider-swift.struct":{"url":"\/documentation\/brazeui\/gifviewprovider-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"GIFViewProvider","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A type providing methods to create and update views supporting animated GIF images.","type":"text"}],"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct","type":"topic","title":"GIFViewProvider","navigatorTitle":[{"text":"GIFViewProvider","kind":"identifier"}]},"https://github.com/Flipboard/FLAnimatedImage":{"url":"https:\/\/github.com\/Flipboard\/FLAnimatedImage","title":"Flipboard\/FLAnimatedImage","identifier":"https:\/\/github.com\/Flipboard\/FLAnimatedImage","type":"link","titleInlineContent":[{"type":"text","text":"Flipboard\/FLAnimatedImage"}]},"https://github.com/SDWebImage/SDWebImage":{"titleInlineContent":[{"text":"SDWebImage\/SDWebImage","type":"text"}],"url":"https:\/\/github.com\/SDWebImage\/SDWebImage","type":"link","identifier":"https:\/\/github.com\/SDWebImage\/SDWebImage","title":"SDWebImage\/SDWebImage"},"https://github.com/kirualex/SwiftyGif":{"url":"https:\/\/github.com\/kirualex\/SwiftyGif","title":"kirualex\/SwiftyGif","identifier":"https:\/\/github.com\/kirualex\/SwiftyGif","type":"link","titleInlineContent":[{"type":"text","text":"kirualex\/SwiftyGif"}]},"doc://Braze/tutorials/Braze/c1-inappmessageui":{"type":"topic","estimatedTime":"10min","kind":"project","url":"\/tutorials\/braze\/c1-inappmessageui","role":"project","abstract":[{"type":"text","text":"Learn how to display "},{"isActive":true,"type":"reference","identifier":"https:\/\/www.braze.com\/docs\/user_guide\/message_building_by_channel\/in-app_messages"},{"text":" to your users using the Braze provided user interface.","type":"text"}],"identifier":"doc:\/\/Braze\/tutorials\/Braze\/c1-inappmessageui","title":"In-App Message UI"},"doc://Braze/documentation/BrazeUI/GIFViewProvider-swift.struct/shared":{"url":"\/documentation\/brazeui\/gifviewprovider-swift.struct\/shared","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7BrazeUI15GIFViewProviderV","text":"GIFViewProvider"}],"kind":"symbol","role":"symbol","abstract":[{"text":"The GIF view provider used for all BrazeUI components.","type":"text"}],"identifier":"doc:\/\/Braze\/documentation\/BrazeUI\/GIFViewProvider-swift.struct\/shared","type":"topic","title":"shared"}}}